{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZyP3dXRfcXLa"
      },
      "source": [
        "# Retrieve & Re-Rank Demo over Simple Wikipedia\n",
        "\n",
        "This examples demonstrates the Retrieve & Re-Rank Setup and allows to search over [Simple Wikipedia](https://simple.wikipedia.org/wiki/Main_Page).\n",
        "\n",
        "You can input a query or a question. The script then uses semantic search\n",
        "to find relevant passages in Simple English Wikipedia (as it is smaller and fits better in RAM).\n",
        "\n",
        "For semantic search, we use `SentenceTransformer('multi-qa-MiniLM-L6-cos-v1')` and retrieve\n",
        "32 potentially passages that answer the input query.\n",
        "\n",
        "Next, we use a more powerful CrossEncoder (`cross_encoder = CrossEncoder('cross-encoder/ms-marco-MiniLM-L-6-v2')`) that\n",
        "scores the query and all retrieved passages for their relevancy. The cross-encoder further boost the performance,\n",
        "especially when you search over a corpus for which the bi-encoder was not trained for.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X2R9TjVzNV_E",
        "outputId": "631a58bf-d89b-4ae6-dae8-6a91cecd4350"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting sentence-transformers\n",
            "  Downloading sentence_transformers-2.6.1-py3-none-any.whl (163 kB)\n",
            "\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/163.3 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━\u001b[0m \u001b[32m112.6/163.3 kB\u001b[0m \u001b[31m3.2 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m163.3/163.3 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting rank_bm25\n",
            "  Downloading rank_bm25-0.2.2-py3-none-any.whl (8.6 kB)\n",
            "Requirement already satisfied: transformers<5.0.0,>=4.32.0 in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (4.38.2)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (4.66.2)\n",
            "Requirement already satisfied: torch>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (2.2.1+cu121)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (1.25.2)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (1.2.2)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (1.11.4)\n",
            "Requirement already satisfied: huggingface-hub>=0.15.1 in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (0.20.3)\n",
            "Requirement already satisfied: Pillow in /usr/local/lib/python3.10/dist-packages (from sentence-transformers) (9.4.0)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.15.1->sentence-transformers) (3.13.3)\n",
            "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.15.1->sentence-transformers) (2023.6.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.15.1->sentence-transformers) (2.31.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.15.1->sentence-transformers) (6.0.1)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.15.1->sentence-transformers) (4.10.0)\n",
            "Requirement already satisfied: packaging>=20.9 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.15.1->sentence-transformers) (24.0)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->sentence-transformers) (1.12)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->sentence-transformers) (3.2.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->sentence-transformers) (3.1.3)\n",
            "Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n",
            "Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n",
            "Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n",
            "Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)\n",
            "Collecting nvidia-cublas-cu12==12.1.3.1 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n",
            "Collecting nvidia-cufft-cu12==11.0.2.54 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n",
            "Collecting nvidia-curand-cu12==10.3.2.106 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n",
            "Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n",
            "Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n",
            "Collecting nvidia-nccl-cu12==2.19.3 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_nccl_cu12-2.19.3-py3-none-manylinux1_x86_64.whl (166.0 MB)\n",
            "Collecting nvidia-nvtx-cu12==12.1.105 (from torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n",
            "Requirement already satisfied: triton==2.2.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->sentence-transformers) (2.2.0)\n",
            "Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch>=1.11.0->sentence-transformers)\n",
            "  Using cached nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers<5.0.0,>=4.32.0->sentence-transformers) (2023.12.25)\n",
            "Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers<5.0.0,>=4.32.0->sentence-transformers) (0.15.2)\n",
            "Requirement already satisfied: safetensors>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers<5.0.0,>=4.32.0->sentence-transformers) (0.4.2)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->sentence-transformers) (1.3.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->sentence-transformers) (3.4.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.11.0->sentence-transformers) (2.1.5)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.15.1->sentence-transformers) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.15.1->sentence-transformers) (3.6)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.15.1->sentence-transformers) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.15.1->sentence-transformers) (2024.2.2)\n",
            "Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.11.0->sentence-transformers) (1.3.0)\n",
            "Installing collected packages: rank_bm25, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, sentence-transformers\n",
            "Successfully installed nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.19.3 nvidia-nvjitlink-cu12-12.4.127 nvidia-nvtx-cu12-12.1.105 rank_bm25-0.2.2 sentence-transformers-2.6.1\n"
          ]
        }
      ],
      "source": [
        "!pip install -U sentence-transformers rank_bm25"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "! pip install datasets"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XRM4iC3k1fOA",
        "outputId": "f38e79e9-0910-43da-9ffc-7073cd214187"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting datasets\n",
            "  Downloading datasets-2.18.0-py3-none-any.whl (510 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m510.5/510.5 kB\u001b[0m \u001b[31m5.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from datasets) (3.13.3)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from datasets) (1.25.2)\n",
            "Requirement already satisfied: pyarrow>=12.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (14.0.2)\n",
            "Requirement already satisfied: pyarrow-hotfix in /usr/local/lib/python3.10/dist-packages (from datasets) (0.6)\n",
            "Collecting dill<0.3.9,>=0.3.0 (from datasets)\n",
            "  Downloading dill-0.3.8-py3-none-any.whl (116 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m17.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (2.0.3)\n",
            "Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (2.31.0)\n",
            "Requirement already satisfied: tqdm>=4.62.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (4.66.2)\n",
            "Collecting xxhash (from datasets)\n",
            "  Downloading xxhash-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m27.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting multiprocess (from datasets)\n",
            "  Downloading multiprocess-0.70.16-py310-none-any.whl (134 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.8/134.8 kB\u001b[0m \u001b[31m15.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: fsspec[http]<=2024.2.0,>=2023.1.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (2023.6.0)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.9.3)\n",
            "Requirement already satisfied: huggingface-hub>=0.19.4 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.20.3)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from datasets) (24.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (6.0.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.1)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (23.2.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.4.1)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (6.0.5)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.9.4)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (4.0.3)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.19.4->datasets) (4.10.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->datasets) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->datasets) (3.6)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->datasets) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->datasets) (2024.2.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->datasets) (1.16.0)\n",
            "Installing collected packages: xxhash, dill, multiprocess, datasets\n",
            "Successfully installed datasets-2.18.0 dill-0.3.8 multiprocess-0.70.16 xxhash-3.4.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from datasets import load_dataset\n",
        "ds = load_dataset(\"Coder-Dragon/wikipedia-movies\", split='train[:1000]')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 240,
          "referenced_widgets": [
            "45423332eaf34499858f2c708cee23a8",
            "4a597af770844e11ab847a3fd08a6d7f",
            "b19f3ea416bf4c5fb0920380426ad094",
            "3ec1450a6f214f0096a472711e5eb85c",
            "9234682560c14dedba0655a0993eee68",
            "ff65fa86e1524640ab6de1cc03426eb5",
            "4b11da7ea91b4a86b5f5dfcf95508d80",
            "fecb7a244e064dda91b0a58fbca92077",
            "64e5ee72f9424956a30dcc382428f9fc",
            "b7437adda7f04a89ac38b063e7bfefec",
            "b67ca4033bf0430388b5a786367bbb66",
            "6561af6601fc49e597521f449874b60f",
            "f4ab6b399a7242ac8b1ec3efe1be9094",
            "788ce9981f3e414eb35ae983fd6bac6f",
            "b89413bec7914666a7daea361ca91de7",
            "20e2abaec3cd4d44aca6c39721a5c31a",
            "52db9cda6f5d473e9d3d55c82d55136d",
            "d5ee83c3a80e44c485ef15e8751bba30",
            "90164402de8447babcc21c19ac62b674",
            "5890d9859c534bc1ba9caa7d82cfe794",
            "29c4d017c10b4b62a630fa66db8d3bc4",
            "dcdf7725183b4785b49a32d3cf42650e",
            "92352eb013c14ca98f145b3080fca1b4",
            "af727d1e22814d53815970cf17a9cfb2",
            "a1913f640fde45cbb0677906337fefa2",
            "c2c005acca5c41948872f6d8e0ed2c29",
            "29503ea1d8644d65ad6c375cbba1fc08",
            "73191074624a447a9c5bf026de3731c0",
            "c64b637b75f348b8b80b0580289c26c9",
            "daabef68853344a6add6406f3cfdee4c",
            "e5759c0dea1240daa0bf441108ab1c7b",
            "7f13f5fe9ffc4521be647128c28fda98",
            "e945d3c5d5184d17aeba59088b0360da"
          ]
        },
        "id": "P04-RZ401aOQ",
        "outputId": "f67104e6-e32d-4a5e-ef51-34094b270c47"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning: \n",
            "The secret `HF_TOKEN` does not exist in your Colab secrets.\n",
            "To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n",
            "You will be able to reuse this secret in all of your notebooks.\n",
            "Please note that authentication is recommended but still optional to access public models or datasets.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Downloading readme:   0%|          | 0.00/1.04k [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "45423332eaf34499858f2c708cee23a8"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Downloading data:   0%|          | 0.00/75.0M [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "6561af6601fc49e597521f449874b60f"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Generating train split: 0 examples [00:00, ? examples/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "92352eb013c14ca98f145b3080fca1b4"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 106,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85,
          "referenced_widgets": [
            "49d47774ac394c88ab4ce6a47315e425",
            "74698d8e54a94cfda40c7facf6478952",
            "e362cf973683405e9989d9df1d1704d3",
            "6cc760cf60e049779e95f946f0c672ec",
            "862f29c8da1f42068be30f37c97914bf",
            "4de303fc79e245d4a60b6924b6739cf3",
            "6bdca55151fd4da28ca39b25d714b94e",
            "00f545b964944ddbbb9bc82f2c6b0dc2",
            "2470f171b98148f18610c36171b6bd91",
            "a2397a53e8754da29663e127a81672dc",
            "2047a6da0d4b46698d425cfe7c6c2998"
          ]
        },
        "id": "D_hDi8KzNgMM",
        "outputId": "1010f71b-9447-4e03-e8ee-ec9b2f7dde29"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Warning: No GPU found. Please add GPU to your notebook\n",
            "Passages: 1000\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Batches:   0%|          | 0/32 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "49d47774ac394c88ab4ce6a47315e425"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "import json\n",
        "from sentence_transformers import SentenceTransformer, CrossEncoder, util\n",
        "import gzip\n",
        "import os\n",
        "import torch\n",
        "\n",
        "if not torch.cuda.is_available():\n",
        "    print(\"Warning: No GPU found. Please add GPU to your notebook\")\n",
        "\n",
        "\n",
        "#We use the Bi-Encoder to encode all passages, so that we can use it with semantic search\n",
        "bi_encoder = SentenceTransformer('nq-distilbert-base-v1')\n",
        "bi_encoder.max_seq_length = 256     #Truncate long passages to 256 tokens\n",
        "top_k = 32                          #Number of passages we want to retrieve with the bi-encoder\n",
        "\n",
        "#The bi-encoder will retrieve 100 documents. We use a cross-encoder, to re-rank the results list to improve the quality\n",
        "cross_encoder = CrossEncoder('cross-encoder/ms-marco-MiniLM-L-6-v2')\n",
        "\n",
        "passages = []\n",
        "for movie in ds:\n",
        "  passages.append(f\"{movie['Title']}: {movie['Plot']}\")\n",
        "\n",
        "\n",
        "# If you like, you can also limit the number of passages you want to use\n",
        "print(\"Passages:\", len(passages))\n",
        "\n",
        "# We encode all passages into our vector space. This takes about 5 minutes (depends on your GPU speed)\n",
        "corpus_embeddings = bi_encoder.encode(passages, convert_to_tensor=True, show_progress_bar=True)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "passages[0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 89
        },
        "id": "rl8jKgheeFUg",
        "outputId": "05781966-43bd-4c24-8847-f83e6fea85f7"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"Kansas Saloon Smashers: A bartender is working at a saloon, serving drinks to customers. After he fills a stereotypically Irish man's bucket with beer, Carrie Nation and her followers burst inside. They assault the Irish man, pulling his hat over his eyes and then dumping the beer over his head. The group then begin wrecking the bar, smashing the fixtures, mirrors, and breaking the cash register. The bartender then sprays seltzer water in Nation's face before a group of policemen appear and order everybody to leave.[1]\""
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 112,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 49,
          "referenced_widgets": [
            "b3508969cd7f443d84591972aa7e15dd",
            "a76086fcd1344d2b8456c7257c448573",
            "1bd5cac03ea0458b87ae7b160e4da3db",
            "eb70f0ea233a415b99b2e97915233c16",
            "b8fe47f2cb924078be75bbd3f1bb70df",
            "8c335a1d5acd460f8e218430912d75e5",
            "53a5c55591c94d22a8ec0ebb54aa7061",
            "ee291c58681f44faa227ab0462429b5a",
            "8255af9d3212427c897e4c73efde4f0c",
            "0ed2c06c35674532b8e271351560b985",
            "627208c9a8e64119a0f4eca3bd220438"
          ]
        },
        "id": "0rueR6ovrs01",
        "outputId": "387edf34-a99c-45bb-99b3-3c5700824789"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/1000 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "b3508969cd7f443d84591972aa7e15dd"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# We also compare the results to lexical search (keyword search). Here, we use\n",
        "# the BM25 algorithm which is implemented in the rank_bm25 package.\n",
        "\n",
        "from rank_bm25 import BM25Okapi\n",
        "from sklearn.feature_extraction import _stop_words\n",
        "import string\n",
        "from tqdm.autonotebook import tqdm\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "# We lower case our text and remove stop-words from indexing\n",
        "def bm25_tokenizer(text):\n",
        "    tokenized_doc = []\n",
        "    for token in text.lower().split():\n",
        "        token = token.strip(string.punctuation)\n",
        "\n",
        "        if len(token) > 0 and token not in _stop_words.ENGLISH_STOP_WORDS:\n",
        "            tokenized_doc.append(token)\n",
        "    return tokenized_doc\n",
        "\n",
        "\n",
        "tokenized_corpus = []\n",
        "for passage in tqdm(passages):\n",
        "    tokenized_corpus.append(bm25_tokenizer(passage))\n",
        "\n",
        "bm25 = BM25Okapi(tokenized_corpus)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 151,
      "metadata": {
        "id": "UlArb7kqN3Re"
      },
      "outputs": [],
      "source": [
        "def search(query):\n",
        "    print(\"Input question:\", query)\n",
        "\n",
        "    ##### BM25 search (lexical search) #####\n",
        "    bm25_scores = bm25.get_scores(bm25_tokenizer(query))\n",
        "    top_n = np.argpartition(bm25_scores, -5)[-5:]\n",
        "    bm25_hits = [{'corpus_id': idx, 'score': bm25_scores[idx]} for idx in top_n]\n",
        "    bm25_hits = sorted(bm25_hits, key=lambda x: x['score'], reverse=True)\n",
        "\n",
        "    print(\"Top-5 lexical search (BM25) hits\")\n",
        "    for hit in bm25_hits[0:5]:\n",
        "        print(\"\\t{:.5f}\\t{}\".format(hit['score'], passages[hit['corpus_id']].replace(\"\\n\", \" \")))\n",
        "\n",
        "    ##### Semantic Search #####\n",
        "    # Encode the query using the bi-encoder and find potentially relevant passages\n",
        "    question_embedding = bi_encoder.encode(query, convert_to_tensor=True)\n",
        "    question_embedding = question_embedding.cpu()\n",
        "    hits = util.semantic_search(question_embedding, corpus_embeddings, top_k=top_k)\n",
        "    hits = hits[0]  # Get the hits for the first query\n",
        "\n",
        "    ##### Re-Ranking #####\n",
        "    # Now, score all retrieved passages with the cross_encoder\n",
        "    cross_inp = [[query, passages[hit['corpus_id']]] for hit in hits]\n",
        "    cross_scores = cross_encoder.predict(cross_inp)\n",
        "\n",
        "    # Sort results by the cross-encoder scores\n",
        "    for idx in range(len(cross_scores)):\n",
        "        hits[idx]['cross-score'] = cross_scores[idx]\n",
        "\n",
        "    # Output of top-5 hits from bi-encoder\n",
        "    print(\"\\n-------------------------\\n\")\n",
        "    print(\"Top-5 Bi-Encoder Retrieval hits\")\n",
        "    hits = sorted(hits, key=lambda x: x['score'], reverse=True)\n",
        "    for hit in hits[0:5]:\n",
        "        print(\"\\t{:.5f}\\t{}\".format(hit['score'], passages[hit['corpus_id']].replace(\"\\n\", \" \")))\n",
        "\n",
        "    # Output of top-5 hits from re-ranker\n",
        "    print(\"\\n-------------------------\\n\")\n",
        "    print(\"Top-5 Cross-Encoder Re-ranker hits\")\n",
        "    hits = sorted(hits, key=lambda x: x['cross-score'], reverse=True)\n",
        "    for hit in hits[0:5]:\n",
        "        print(\"\\t{:.5f}\\t{}\".format(hit['cross-score'], passages[hit['corpus_id']].replace(\"\\n\", \" \")))\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "search(query = \"Documentaries showcasing indigenous peoples' survival and daily life in Arctic regions\")\n",
        "\n",
        "# Lexical Search\n",
        "# Recall @1: 0\n",
        "# MRR: 0\n",
        "\n",
        "# Bi-Encoder\n",
        "# Recall @1: 1\n",
        "# MRR: 1\n",
        "\n",
        "# Cross-Encoder\n",
        "# Recall @1: 1\n",
        "# MRR: 1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fAMZs17uiIWN",
        "outputId": "d118d2bb-5ac7-4b8b-c516-d2acdbedf91f"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input question: Documentaries showcasing indigenous peoples' survival and daily life in Arctic regions\n",
            "Top-5 lexical search (BM25) hits\n",
            "\t9.24106\tI Do: The Boy meets and marries The Girl. A year later, the two walk down the street with a baby carriage carrying a bottle instead of a baby when they run into The Girl's brother who asks the couple to do him a favor and babysit his children. They accept and the remainder of the short consists of gags showcasing the difficulties of babysitting children. At the very end, The Boy discovers some knitted baby clothes in a drawer (implying that The Girl is pregnant).\n",
            "\t8.23295\tUncharted Seas: As described in a film magazine,[3] after her drunken husband Tom Eastman (Gerard) brings home three cabaret women, Lucretia (Lake) can no longer bear the abuse and turns to arctic explorer Frank Underwood (Valentino), who has long loved her and promised to come whenever she needs his help. Urging her husband to become a man and do something worth wile, Lucretia goes with him to the North seas in search of a treasure ship. Tom becomes panic stricken and turns back, while she goes on with Frank, who is on the same mission in his own ship. The two fight against temptation and win, and when their ship is destroyed on the ice they set off to civilization with a dog sled. They are saved by a government cruiser.\n",
            "\t6.43015\tPowers That Prey: Burton Grant exposes politician Jarvis McVey as a crook in a newspaper and is run out of town. He asks his daughter Sylvia to turn his job at the Daily News over to editor Frank Summers. Sylvia has inherited her father's talents and decides to fire Frank and take over the newspaper herself. Meanwhile, Frank finds out McVey is involved in a scheme concerning the city franchise. When Sylvia is informed, she publishes the news. She publishes stories about merchants who do not do business in ways that she believes are correct, which almost ruins the paper. Soon, the townspeople are after her and her father comes back to protect her against the outraged townsfolk, while Frank concerns about proving her reliability. She is successful in preventing McVey from furthering his graft policies, and becomes engaged to Frank.[3][4]\n",
            "\t4.97731\tRough Waters: The film begins with a parked car with drawn curtains inside of which three gangsters (played by Walter Miller, Richard Alexander and Skeets Noyes) and silently waiting for their prey. When a large closed vehicle approaches the car with gangsters it crashes and the gangsters quickly rush to the vehicle, kill the chauffeur and two guards and steal a satchel with 100,000 dollars.\r The gangsters then look for a hideout and find a fishing hut. This hut is the home of Capt. Thomas (Breese), who can no longer walk and is confined to a wheelchair, and his young daughter Mary (Ralston). Mary is in love with Cal Morton (Chandler), who is a policeman that rides a motorcycle. Morton is Rin Tin Tin's owner. Masquerading as government agents, the gangsters break into the hut and prevent Capt. Thomas and Mary from leaving.\r When Rin Tin Tin delivers the daily newspaper, as usual, Mary manages to place a note on Rin Tin Tin for Cal Morton. When Cal arrives with Rin Tin Tin, he and his dog are wounded by one of the gangsters. The gangsters also capture two mail agents (William Irving and George Rigon). The gangsters then attempt to make a getaway by using a boat. In spite of being injured, Rin Tin Tin manages to prevent the escape of the gangsters and delivers them to Cal who handcuffs them with Bill's help.\n",
            " Many of the film's intertitles are quotes (or paraphrases) from Scripture, often with chapter and verse accompanying.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-5 Bi-Encoder Retrieval hits\n",
            "\t0.44831\tNanook of the North: The documentary follows the lives of an Inuk, Nanook, and his family as they travel, search for food, and trade in the Ungava Peninsula of northern Quebec, Canada. Nanook; his wife, Nyla; and their family are introduced as fearless heroes who endure rigors no other race could survive. The audience sees Nanook, often with his family, hunt a walrus, build an igloo, go about his day, and perform other tasks.\n",
            " Forced to flee back to the igloo, where his companion is hoovering the ice floor, Keaton sees his pretty neighbor again in her new hut. Fortified by drinking a bottle of cola, he decides he will force himself on her in the manner of Erich von Stroheim's character from the film Foolish Wives. He appears in Stroheim-like clothing at her hut, but is chased by her husband. Pretending to be a snowman, he eludes him and returns to the hut. Roberts tries to fight the husband but ends up falling into a lake. The husband returns to find his wife weeping on the floor as Keaton stands over her. He wrestles with Keaton. Keaton's wife appears and shoots her husband. The wounded Keaton takes a pistol and tries to shoot the husband, but at that moment a janitor wakes Keaton up in the front row of a film theater (the gun in the last scene turns out to be a folded newspaper in his hand) and Keaton realizes that it was all a dream!\n",
            "\t0.27374\tDavid Copperfield: \"David Copperfield consists of three reels and as three separate films, released in three consecutive weeks, with three different titles: The Early Life of David Copperfield, Little Em'ly and David Copperfield and The Loves of David Copperfield.[4]\n",
            "\t0.27116\tStraight Shooting: At the end of the 19th century in the Far West, a farmer is fighting for his right to plough the plains. In order to expel the farmers, the ranchers try to control access to water.[2]\n",
            " Triumphantly, the trio – now a family –strides into the sunset, “children of the sun.”\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-5 Cross-Encoder Re-ranker hits\n",
            "\t-4.55430\tNanook of the North: The documentary follows the lives of an Inuk, Nanook, and his family as they travel, search for food, and trade in the Ungava Peninsula of northern Quebec, Canada. Nanook; his wife, Nyla; and their family are introduced as fearless heroes who endure rigors no other race could survive. The audience sees Nanook, often with his family, hunt a walrus, build an igloo, go about his day, and perform other tasks.\n",
            "\t-9.21136\tUncharted Seas: As described in a film magazine,[3] after her drunken husband Tom Eastman (Gerard) brings home three cabaret women, Lucretia (Lake) can no longer bear the abuse and turns to arctic explorer Frank Underwood (Valentino), who has long loved her and promised to come whenever she needs his help. Urging her husband to become a man and do something worth wile, Lucretia goes with him to the North seas in search of a treasure ship. Tom becomes panic stricken and turns back, while she goes on with Frank, who is on the same mission in his own ship. The two fight against temptation and win, and when their ship is destroyed on the ice they set off to civilization with a dog sled. They are saved by a government cruiser.\n",
            " Forced to flee back to the igloo, where his companion is hoovering the ice floor, Keaton sees his pretty neighbor again in her new hut. Fortified by drinking a bottle of cola, he decides he will force himself on her in the manner of Erich von Stroheim's character from the film Foolish Wives. He appears in Stroheim-like clothing at her hut, but is chased by her husband. Pretending to be a snowman, he eludes him and returns to the hut. Roberts tries to fight the husband but ends up falling into a lake. The husband returns to find his wife weeping on the floor as Keaton stands over her. He wrestles with Keaton. Keaton's wife appears and shoots her husband. The wounded Keaton takes a pistol and tries to shoot the husband, but at that moment a janitor wakes Keaton up in the front row of a film theater (the gun in the last scene turns out to be a folded newspaper in his hand) and Keaton realizes that it was all a dream!\n",
            " Triumphantly, the trio – now a family –strides into the sunset, “children of the sun.”\n",
            " The Man kneels by the Wife's bed as she slowly opens her eyes. The Man and the Wife kiss, while the Woman From the City's carriage rolls down the hill toward the lake, and the film dissolves to the sunrise.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 134,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WawjqQBJa3FP",
        "outputId": "9dbf03ce-ecc5-45c9-b77f-ad173c6fcebb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input question: Western romance\n",
            "Top-5 lexical search (BM25) hits\n",
            "\t6.24503\tThe Call of the Wild: A white girl (Florence Lawrence) rejects a proposal from an Indian brave (Charles Inslee) in this early one-reel Western melodrama. Despite the rejection, the Indian still comes to the girl's defense when she is abducted by his warring tribe. In her first year in films, Florence Lawrence was already the most popular among the Biograph Company's anonymous stock company players. By 1909, she was known the world over as \"The Biograph Girl.\"\n",
            "\t5.91501\tRomance: As described in a film publication,[2] a youth (Arthur Rankin) in the prologue seeks advice from his grandfather (Sydney), who then recalls a romance of his own youth which is then shown as a flashback. A priest (Sydney) is in love with an Italian opera singer (Keane), and the drama involves the conflict between his efforts to rise above worldly things or to leave with her. The romance ends with a deep note of pathos.\n",
            "\t5.53413\tFour Sons: Mother Bernle is a widow in Bavaria with four sons: Franz, Johann, Andreas and Joseph.\r Joseph receives a job offer from the United States, and he is given money to travel there by his mother.\r The First World War is heating up. Franz, who is already serving in the German army, is joined by first Johann and then Andreas who is forced into the army.\r In America, Joseph has married and is running a delicatessen when America enters the war, Joseph enlists to fight for the American side. When Joseph's enlistment is discovered, it causes problems for Mother Bernle because she is shunned in her village.\r Franz and Johann are killed on the Eastern Front. Andreas is wounded on the Western Front and dies in the arms of his brother Joseph.\n",
            "\t5.40593\tA Man's Fight: As described in a film magazine,[4] wealthy clubman Roger Carr (Farnum) assumes responsibility for a murder for which he believes his sister is guilty. He serves his sentence and returns home only to find that his father will not accept him back as he has besmirched the family name. His sister has entered a convent. He goes west and engages in his profession, mining engineer, soon becoming the leader of the independent miner operators against trust persecution. Here he meets and learns to love a western girl that works as his stenographer. When success is about to crown his efforts, his antagonists discover his prison record and use it against him. Then his sister appears with a signed confession of a butler, formerly in their employ, who told the truth of the murder on his dying bed. This results in a happy ending.\n",
            "\t5.30756\tGun Smoke: Following a killing and robbery in a big city back east, gang leader Kedge Darvas (Boyd) and some of his henchies take a train to a small western town in Idaho, with intentions of hiding out there until things cool down back in Chi or NYC, or wherever they lammed from. They are welcomed with open arms by the citizens under the impression they are there as capital investors with money to spend. Before long, Darvas figures the town is ripe for the taking and sends word for reinforcements, and each arriving train unloads a few suits and snappy-brim hats. Then they get rough, kill Sheriff Posey Meed (Oliver) and rile up the citizens, led by cowhand Brad Farley (Arlen), who had Darvas spotted for a wrong number just by the way he made moves on Sue Vancey (Brian),\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-5 Bi-Encoder Retrieval hits\n",
            "\t0.31259\tRomance: As described in a film publication,[2] a youth (Arthur Rankin) in the prologue seeks advice from his grandfather (Sydney), who then recalls a romance of his own youth which is then shown as a flashback. A priest (Sydney) is in love with an Italian opera singer (Keane), and the drama involves the conflict between his efforts to rise above worldly things or to leave with her. The romance ends with a deep note of pathos.\n",
            "\t0.29018\tMarried in Hollywood: A showgirl, part of a troupe, tours Europe where she falls in love with a Balkan prince. The prince's parents disapprove and attempt to put a stop to the romance. A revolution occurs and the prince and the showgirl elope to Hollywood.\n",
            "\t0.28734\tThe Great Gatsby: An adaptation of F. Scott Fitzgerald's Long Island-set novel, where Midwesterner Nick Carraway is lured into the lavish world of his neighbor, Jay Gatsby. Soon enough, however, Carraway will see through the cracks of Gatsby's nouveau riche existence, where obsession, madness, and tragedy await.\n",
            "\t0.28486\tFrankenstein: Described as \"a liberal adaptation of Mrs. Shelley's famous story\", the plot description in the Edison Kinetogram was:[3]\n",
            "\t0.28271\tYouth's Endearing Charm: The film is about a court case and embezzlement.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-5 Cross-Encoder Re-ranker hits\n",
            "\t-4.11082\tRomance: As described in a film publication,[2] a youth (Arthur Rankin) in the prologue seeks advice from his grandfather (Sydney), who then recalls a romance of his own youth which is then shown as a flashback. A priest (Sydney) is in love with an Italian opera singer (Keane), and the drama involves the conflict between his efforts to rise above worldly things or to leave with her. The romance ends with a deep note of pathos.\n",
            " Stanton marries Virginia and opens a gambling hall. When the regiment eventually turns up at the gambling hall, Virginia makes merry with her former friends. Stanton, in a fit of jealousy, leaves the establishment with another woman and tries his luck in California, searching for gold. He has poor luck and becomes a derelict. Eventually he meets his wife in San Francisco, resulting in a happy reconciliation. Some soldiers find him and give him a choice between being deported or re-enlisting in the army. He re-enlists. Joe E. Brown, in the part of Hasty, his doomed sidekick, provided the comedy for the film.\n",
            "\t-5.73922\tA Romance of Happy Valley: As described in a film magazine,[3] the senior John L. Logan (Fawcett) and his wife (Bruce) are very religious, and are taken aback when John Jr. (Harron) announces that he plans to leave their Southern farm and go to New York City to get rich. They take him to church and pray until he accepts religion. His sweetheart Jennie Timberlake (Gish) is afraid that he will backslide, which he does when the lure of the city becomes too strong for him. He is gone seven years and returns a rich man, but is not recognized when he returns home, which is now taking in boarders. Meanwhile, his father has fallen on hard times and is trying to get money to pay the farm's mortgage, and plans to murder the stranger staying at his home, not realizing it is his son. In town, there is a bank robbery and the robber is chased to the Logan farm. The mother sees that her son has returned home, and the father's remorse ends only as the family is once more together. It is then revealed that it was the bank robber that had been shot by the father. The faithful Jennie and John Jr. end up together at the end.\n",
            "\t-7.12741\tAcross the Pacific: After his father brings disgrace on his family, Monte joins the Spanish–American War and goes with his regiment to the Philippines. Although he has a sweetheart back home, Claire Marsh, Monte is enlisted to romance a half-caste girl, Roma, who knows the whereabouts of the Philippine leader Emilio Aguinaldo. Monte must keep up the ruse, even when Claire comes to the islands to visit him. He finally gets the information he needs, but not before he is branded a deserter and then has to prove his mettle on the battlefield. When the insurrection is squelched and Aguinaldo is captured, Monte is able to explain everything to Claire, and the couple is reunited.\n",
            " The cops show up and take her away. Steve begs Dolly to come back to him, but she says that he would be better off without her. Dolly is taken to prison. Steve, however, manages to get the warden to parole her into his custody.\n"
          ]
        }
      ],
      "source": [
        "search(query = \"Western romance\")\n",
        "\n",
        "# Lexical Search\n",
        "# Recall @1: 0\n",
        "# MRR: 0\n",
        "\n",
        "# Bi-Encoder\n",
        "# Recall @1: 0\n",
        "# MRR: 0\n",
        "\n",
        "# Cross-Encoder\n",
        "# Recall @1: 0\n",
        "# MRR: 0"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 135,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ei9Q1roSa9GE",
        "outputId": "68591d63-fa8f-4894-f65c-c562e2c2e65f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input question: Silent ﬁlm about a Parisian star moving to Egypt, leaving her husband for a baron, and later reconciling after ﬁnding her family in poverty in Cairo.\n",
            "Top-5 lexical search (BM25) hits\n",
            "\t34.07171\tSahara: Silent film femme fatale, Louise Glaum, portrays the role of Mignon, a Parisian music hall celebrity. Mignon marries a young American civil engineer, John Stanley, portrayed by Matt Moore. Stanley is transferred to Egypt to work on an engineering project in the Sahara. Mignon and her son, portrayed by Pat Moore, join Stanley in the desert.[3][4] Unhappy with life in the desert, Mignon leaves Stanley and her son in the desert and moves to Cairo with the wealthy Baron Alexis, portrayed by Edwin Stevens. Mignon lives in Baron Alexis' palace while Stanley goes blind and becomes addicted to the drug hasheesh. Mignon later encounters Stanley and her son, who have become beggars in the streets of Cairo.[3][4] Mignon returns to the desert to care for her husband, and the two are reconciled.\n",
            "\t14.20629\tHe Who Gets Slapped: Paul Beaumont (Lon Chaney) is a scientist who labored for years alone to prove his radical theories on the origin of mankind. Baron Regnard (Marc McDermott) becomes his patron, enabling him to do research while living in his mansion. One day, Beaumont announces to his beloved wife Marie and the Baron that he has proved all his theories and is ready to present them before the Academy of the Sciences. He leaves the arrangements to the Baron. However, after Beaumont goes to sleep, Marie steals his key, opens the safe containing his papers, and gives them to the baron.\r On the appointed day, Paul travels to the Academy with the Baron. He is aghast when the Baron, instead of introducing him, takes credit for Paul's work himself. After he recovers from the shock, Paul confronts him in front of everyone, but the Baron tells them that Paul is merely his assistant and slaps him. All of the academicians laugh at his humiliation. Paul later seeks comfort from his wife, but she brazenly admits she and the baron are having an affair and calls him a clown. Paul leaves them.\r Five years pass by. Paul is now a clown calling himself \"HE who gets slapped\", the star attraction of a small circus near Paris. His act consists of his getting slapped every evening by other clowns, and includes Paul pretending to present in front of the Academy of Science.\r Another of the performers is Bezano (John Gilbert), a daredevil horseback rider. Consuelo (Norma Shearer), the daughter of the impoverished Count Mancini, applies to join his act. Bezano falls in love with Consuelo, as does Paul. Consuelo and her father, however, are planning to restore the family's fortunes with a marriage to her father's wealthy friend.\r One night, during HE's performance, he spots the baron in the audience. The baron goes backstage and begins flirting with Consuelo, which she does not like. The next day, the baron sends Consuelo jewelry, but she rejects it.\r When her father leaves for a meeting with the baron, Bezano takes Consuelo out to the countryside for a romantic meeting, where they declare their love for each other. Meanwhile, Count Mancini convinces the reluctant baron that the only way he can have Consuelo is by marrying her. The baron discards the heartbroken Marie, leaving her with a check.\r Later, HE admits to Consuelo he, too, is in love with her. She thinks he is kidding and laughingly slaps him. They are interrupted by the baron and the count, who inform Consuelo she will marry the baron after the night's performance. When HE tries to interfere, he is locked in an adjoining room, where an angry lion is kept in a cage. He moves the cage so that, when he carefully opens it, only the door to the next room prevents the lion from escaping. HE re-enters the other room through the only other entrance (making sure to lock it behind him) and reveals his identity to the baron. HE threatens the baron, but the count stabs him with a sword.\r The baron and the count try to leave but, finding the main entrance locked, open the side door, releasing the lion. The animal kills the count, then the baron. However, the lion tamer shows up and saves HE from the same fate. HE goes on stage and collapses. He assures Consuelo he is happy and that she will be happy, before dying in her arms.\n",
            "\t11.67340\tThe Maltese Falcon: In San Francisco, private investigator Sam Spade (Ricardo Cortez) and his partner Miles Archer (Walter Long) are approached by Ruth Wonderly (Bebe Daniels) to follow a man, Floyd Thursby, who allegedly ran off with her younger sister. The two accept the assignment because the money is good, even though they disbelieve her story.\r Late that night, police detective Tom Polhaus (J. Farrell MacDonald) informs Spade that Archer has been shot and killed while tailing Thursby, but Spade turns down the opportunity to examine the body at the scene. As he's leaving, he has a brief conversation in Chinese with a man loitering in a doorway. Later, Polhaus and his superior, Lt. Dundy (Robert Elliott), visit Spade at his apartment. Thursby has been killed, and they want to know where Spade's been in the last few hours — they suspect him of killing Thursby to avenge the death of his partner. With no real evidence against Spade, they leave.\r The next day, Spade calls on Ruth Wonderly in an attempt to find out her real reasons for hiring them. She uses several different ploys to keep Spade on the case in spite of the two murders, but Spade sees through them. Despite this, he gets only a little information from her: Thursby was her accomplice whom she no longer trusted, and she feels she's in danger — but she won't tell Spade what she and Thursby were trying to pull off. Frustrated, Spade begins to leave, but then thinks better of it. He takes $500 from Wonderly, supposedly the last of her money, and goes.\r At the office, Spade tells his secretary, Effie (Una Merkel) to have Archer's name removed from the door, and he receives a visit from a Dr. Joel Cairo (Otto Matieson), who offers Spade $5,000 if he can retrieve an enamel figurine of a black bird that he is trying to recover for the \"rightful owner\". Not knowing anything about this statuette, Spade plays along, overpowering Cairo when he pulls a gun and attempts to frisk him and search the office. Nevertheless, he agrees to try to recover the statuette.\r That night, at his apartment, Spade questions Wonderly about Cairo and the black bird. Nervous about Cairo's offer and afraid of losing Spade's help, she begins to attempt to seduce him, but is interrupted when Dundy and Polhaus arrive. Spade keeps them outside the door as they question him about his relationship with Archer's wife, Iva (Thelma Todd), with whom Spade has been having an affair. They are about to leave when Wonderly screams, and they rush in to find her holding a gun on Cairo. Spade laughs the incident off with a preposterous story which nonetheless gets the police to leave, with Cairo in tow, allowing Spade and Wonderly to continue their \"interrogation\". The next morning, as Wonderly sleeps in his bed, Spade lifts her key and thoroughly searches her apartment, finding nothing. Returning to his own place, Spade gets a visit from Iva Archer. Spade tries to get rid of her, but she sees Wonderly in the bedroom doorway and leaves in a huff, threatening to tell everything she knows to Lt. Dundy.\r Spade receives a note from Casper Gutman (Dudley Digges), inviting him to come and talk about the black bird. Over drinks and cigars, Spade learns the history and value of the statuette, which is encrusted with precious jewels covered over with enamel, and that Gutman is the mastermind behind the attempt to steal the bird. Spade lies to Gutman that \"for the right price\" he can deliver the figurine in a couple of days, and they make a deal which Gutman seals with a $1000 bill. Just then, Cairo arrives and tells Gutman privately that Spade does not have the falcon, that Captain Jacoby (Agostino Borgato), whose ship La Paloma arrives from Hong Kong that night, does. Gutman then slips Spade a mickey in a celebratory drink, and retrieves his $1000.\r Later that night, Spade arrives back in his office, where he finds Effie asleep behind his desk. Suddenly, a man staggers in, collapses to the floor and dies — it's Captain Jacoby, having been shot several times. The suitcase he was carrying has the precious black bird in it. Spade checks the bag at a baggage check and sends himself the ticket in the mail. Called in to see the District Attorney (Morgan Wallace) because of what Iva's been telling the police, Spade stonewalls them, and is given 24 hours to wrap up the case and bring in the real killers.\r Wonderly lures Spade into his apartment, where Cairo and Gutman are waiting for him with guns. Knowing that Spade has the falcon, Gutman gives him ten $1,000 bills in an envelope, but Spade insists there also has to be a \"fall guy\" to give the police to account for the murders (Archer, Thursby and Jacoby), and suggests Gutman's gunman, Wilmer Cook (Dwight Frye), as the patsy. Gutman rejects this idea, and Spade then puts forward Cairo as a candidate. Cairo counters that Spade's been paid and should bring forward the bird, and they all settle in to wait for the morning, when Spade says he can produce it. As Wonderly leaves to make coffee and sandwiches, Gutman accuses her of stealing one of the bills from the envelope, prompting Spade to have her strip. When he finds she doesn't have the bill on her, he accuses Gutman of palming it, which Gutman admits.\r Now having the upper hand, Spade tells Gutman that Wilmer will be the fall guy, which Cairo and Gutman discuss in a whispered conference. Goaded by Spade, Wilmer pulls his gun, Spade knocks him out — and Gutman and Cairo agree to Spade's proposal. After Spade calls Effie and asks her to pick up the suitcase with the falcon in the morning and bring it to them, Gutman explains to him how Wilmer killed Thursby and Jacoby. When the bag shows up, Wilmer escapes out the window while the conspirators are frantically opening it and examining the black bird. They soon determine that it is a fake — they've been duped by the previous owner — and Gutman and Cairo decide to make another attempt to steal it. As they leave, Gutman takes back his $10,000 from Spade at gunpoint.\r Spade immediately calls Detective Polhaus and tells him to pick up Gutman, Cairo and Wilmer: he'll provide Wilmer's guns as evidence. Confronting Wonderly, Spade accuses her of killing Archer to throw suspicion on Thursby and get him out of the way. She admits it, and Spade tells her that he's going to turn her in for the murder, despite their love for each other.\r When Dundy and Polhaus show up, they reveal that Wilmer shot Gutman and Cairo dead before being apprehended. Spade gives them Wilmer's guns, tells them that Wonderly killed Archer, and they take her away. We then learn from a newspaper article that Spade \"caused a sensation at [Wonderly's] trial when he produced Lee Fu Gow, Chinese merchant, the only eye-witness to the Archer killing, who positively identified Miss Wonderly as the murderess\". Spade goes to visit Wonderly in prison to tell her that he's been made Chief Investigator for the District Attorney's office. Spade instructs the prison matron (played by Lucille Ward) to treat Wonderly well and give her whatever she wants. When the matron asks who will pay for the special treatment, Spade tells her to send the bill to the D.A.'s office: \"I'll OK it.\"\n",
            "\t10.38599\tInspiration: Yvonne Valbret (Garbo) is a Parisian kept woman who poses as an artist's model. She falls in love with a young student of foreign diplomacy, André Montell, played by Robert Montgomery. When André learns of her past and her multiple lovers, he leaves her. But finding Yvonne living in poverty when their paths cross again, he pays for her to live in his country cottage outside Paris and they engage in a Platonic relationship. He soon reveals his intent to marry another woman as Yvonne begs him not to desert her. André eventually realizes he loves Yvonne and decides to choose love over career. When he comes to the cottage to tell her, he is met by one of Yvonne's old lovers pleading with her to return to him. She immediately decides to marry André, but fearing their relationship will ruin his career, she chooses her old amour and writes André a farewell note while he is sleeping.\n",
            " His son later dies in a Civil War battle and his wife dies of heartbreak over the son's death. Shanks spends decades keeping silent about his involvement with the Copperheads until his granddaughter prepares to marry and he's forced to come clean about being involved in a secret Civil War Mission. With this understanding friends and family forgive him.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-5 Bi-Encoder Retrieval hits\n",
            " Decatur is not fooled, and obeys the \"silent command\" of the Chief of Naval Intelligence to play along with the spies without revealing his purpose to friends or family. He is court-martialed, stripped of rank, and dismissed from the Navy after he strikes an admiral. His association with Williams estranges him from his wife, but earns him the trust of Hisston and the other spies. When the conspirators are ready to enact their plan, he travels to Panama with them. He thwarts their attempt at sabotage, saving the canal and the fleet. He is reinstated into the Navy, reunited with his wife, and honored by the nation for his heroism.[1][2]\n",
            " Harry thinks that Bebe is interested in him as well, so he risks everything when Bebe ends up in jail. This leads to a lot of trouble for Harry. Throughout the whole ordeal Priscilla waits for Harry to face reality.\n",
            "\t0.36501\tThe House with Closed Shutters: During the American Civil War a young soldier loses his nerve in battle and runs away to his home to hide; his sister puts on his uniform, takes her brother's place in the battle, and is killed. Their mother, not wanting the shameful truth to become known, closes all the shutters (hence the film's title) and keeps her son's presence a secret for many years, until two boyhood chums stumble upon the truth.\n",
            "\t0.34545\tThe House of Mirth: Socialite but penniless orphan Lily Bart is living with her wealthy aunt who insists that she takes upon herself a rich husband. Balking at this idea and remaining faithful to her impecunious sweetheart Lawrence Selden (Henry Kolker), Lily is desirous of maintaining her luxurious lifestyle: she accepts the financial \"favors\" of some married millionaires but refuses to surrender her virtue in return – until she discovers that her sainted Selden has been fooling around with another man's wife.\n",
            "\t0.32171\tCharlie Chan Carries On: Charlie Chan tries to solve the murder of a wealthy American found dead in a London hotel room. Settings include London, Nice, France, San Remo, Honolulu and Hong Kong.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-5 Cross-Encoder Re-ranker hits\n",
            "\t3.50237\tSahara: Silent film femme fatale, Louise Glaum, portrays the role of Mignon, a Parisian music hall celebrity. Mignon marries a young American civil engineer, John Stanley, portrayed by Matt Moore. Stanley is transferred to Egypt to work on an engineering project in the Sahara. Mignon and her son, portrayed by Pat Moore, join Stanley in the desert.[3][4] Unhappy with life in the desert, Mignon leaves Stanley and her son in the desert and moves to Cairo with the wealthy Baron Alexis, portrayed by Edwin Stevens. Mignon lives in Baron Alexis' palace while Stanley goes blind and becomes addicted to the drug hasheesh. Mignon later encounters Stanley and her son, who have become beggars in the streets of Cairo.[3][4] Mignon returns to the desert to care for her husband, and the two are reconciled.\n",
            "\t-5.89624\tMadame X: As described in a film magazine,[3] jealous husband Louis Floriot (Courtleigh), refusing to forgive his wife Jacqueline (Frederick) for fleeing from his wrath and living with the friend who presses his attentions on her, forces her into the life of a derelict. Twenty years later she returns to France from Buenos Aires believing that her son Raymond has died. Laroque (Ainsworth), a crook who aids her in her return to France, learns that she is the wife of a man of wealth and tries, with the help of his two associates M. Robert Parissard (Belmore) and M. Merival (Louis), to get possession of a fortune that rightfully belonged to Jacqueline. To protect her husband from violence, Jacqueline kills Laroque and, accused of murder, is brought to trial. Refusing to confer with her counsel and preferring death to freedom, during the course of the trial she receives the shocking revelation that the defendant attorney is her son Raymond (Ferguson). The tragic story ends with the reunion of the two and the death of the miserable mother.\n",
            " Jim is charged with Rosie's murder. When Fanny shows up at the police station, Jim tells her to divorce him so she will not get entangled in his troubles, but she refuses to do so. Fortunately, fingerprints on a liquor bottle at Rosie's place match Tony's, and Jim is released. The couple reconcile, and Jim promises to stop drinking.\n",
            " Years pass by. In 1888, Mary celebrates her 39th birthday and is having contact with her family again. She finds out John is having a mistress, Estelle. Mary feels humiliated, but Estelle makes things worse when she confronts Mary with the fact she cannot make her husband happy. Mary grants her husband a divorce, but he does not want to leave her. He admits he has had an affair with Estelle, but that it didn't mean anything. They reunite, although John announces he has lost all of his money. The film goes back to present, where Mary is told her husband has recovered from his illness.\n",
            "\t-7.77578\tA Society Exile: Based upon a plot summary included in a film review in a film publication,[2] Nora (Ferguson) is an American heiress who is courted by Lord Bissett (Gamble) while visiting England. She overhears Bissett discussing with his sister the need of Nora's money to replenish his fortune, so she leaves him and moves into a nearby cottage. A successful playwright Sir Howard Furnival (Stephenson) assists her in preparing a play based upon a novel she has written, but keeps this secret from his wife Doris (Dean), who is very jealous. Bissett obtains a page of the manuscript in Nora's handwriting with enduring terms, and gives it to Doris, telling her that it is a love letter to her husband. This leads to the deaths of both Furnivals, and Nora is blamed and ostracized. Nora changes her name and goes to Venice, where she meets and becomes engaged to English army officer Sir Ralph Newell (Carleton). Before their marriage she confesses who she is in a letter that he never receives. Upon return to England, she discovers that her husband is the brother of Doris and has cursed the woman who caused his sister's death. Bissett reveals to Newell who Nora is. In the end after more melodrama, the lovers are reunited in Venice.\n"
          ]
        }
      ],
      "source": [
        "search(query = \"Silent ﬁlm about a Parisian star moving to Egypt, leaving her husband for a baron, and later reconciling after ﬁnding her family in poverty in Cairo.\")\n",
        "\n",
        "# Lexical Search\n",
        "# Recall @1: 1\n",
        "# MRR: 1\n",
        "\n",
        "# Bi-Encoder\n",
        "# Recall @1: 0\n",
        "# MRR: 0\n",
        "\n",
        "# Cross-Encoder\n",
        "# Recall @1: 1\n",
        "# MRR: 1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 121,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YVQyKpIjbSdC",
        "outputId": "5df319e0-1845-4510-b175-6b1915616b5a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input question: Comedy ﬁlm, oﬃce disguises, boss's daughter, elopement.\n",
            "Top-3 lexical search (BM25) hits\n",
            "\t8.400\tBucking Broadway: As described in a film magazine,[3] Cheyenne Harry (Carey), one of the cowboys on a ranch in Wyoming, falls in love with Helen (Malone), his boss's daughter. She decides to elope to the city with Captain Thornton (Pegg), a wealthy visitor to the ranch from New York. Cheyenne and Helen's father (Wells) are downhearted. Cheyenne, devastated by the loss of his fiance, decides to go to the city to rescue her, and finds Thorton giving a dinner party in a hotel about to announce his engagement to Helen. As the dinner progresses Helen discovers the true nature of Thornton and endeavors to escape from him. Cheyenne comes to her rescue and, with the assistance of some cowboys, clean up the place, leaving Cheyenne and Helen reunited.\n",
            "\t8.293\tMabel's Blunder: Mabel's Blunder tells the tale of a young woman who is secretly engaged to the boss's son.[1] The young man's sister comes to visit at their office, and a jealous Mabel, not knowing who the visiting woman is, dresses up as a (male) chauffeur to spy on them.\n",
            "\t7.488\tThe Boy Friend: Comedy about a small-town girl unhappy with her family, and a boy trying to please her by throwing a big party.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-3 Bi-Encoder Retrieval hits\n",
            "\t0.445\tThe Lady Lies: Children of a widower who is having an affair with a salesgirl try to break it up but are won over by the girl.\n",
            "\t0.433\tDressed to Kill: The gang of a mob boss grow suspicious of his new girlfriend. She's a beautiful young girl and they don't believe she would actually associate with the mob and wonder if she's really a police \"plant\". The mobsters dress nattily to not appear \"out of place\" in the ritzy neighborhoods prior to a heist.\n",
            "\t0.399\tA Daughter of the Gods: A sultan agrees to help an evil witch destroy a mysterious beauty if the witch will bring his young son back to life.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-3 Cross-Encoder Re-ranker hits\n",
            "\t-7.598\tManhandled: The shop girl Tessie McGuire is invited by her boss to a fun party. There she acts like a Russian duchess. The owner of an expensive department store hires her to attract customers. As she finds her way in the New York's higher milieu, she alienates most of her friends.\n",
            "\t-7.937\tDressed to Kill: The gang of a mob boss grow suspicious of his new girlfriend. She's a beautiful young girl and they don't believe she would actually associate with the mob and wonder if she's really a police \"plant\". The mobsters dress nattily to not appear \"out of place\" in the ritzy neighborhoods prior to a heist.\n",
            "\t-8.289\tMarried in Hollywood: A showgirl, part of a troupe, tours Europe where she falls in love with a Balkan prince. The prince's parents disapprove and attempt to put a stop to the romance. A revolution occurs and the prince and the showgirl elope to Hollywood.\n"
          ]
        }
      ],
      "source": [
        "search(query = \"Comedy ﬁlm, oﬃce disguises, boss's daughter, elopement.\")\n",
        "\n",
        "# Lexical Search\n",
        "# Recall @1: 0\n",
        "# MRR: 0\n",
        "\n",
        "# Bi-Encoder\n",
        "# Recall @1: 0\n",
        "# MRR: 0\n",
        "\n",
        "# Cross-Encoder\n",
        "# Recall @1: 0\n",
        "# MRR: 0"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 122,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iVomHSSsbcut",
        "outputId": "35ca09f8-fce9-4bb8-c0ca-ae0113575e29"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input question: Lost ﬁlm, Cleopatra charms Caesar, plots world rule, treasures from mummy, revels with Antony, tragic end with serpent in Alexandria.\n",
            "Top-3 lexical search (BM25) hits\n",
            "\t70.116\tCleopatra: Because the film has been lost, the following summary is reconstructed from a description in a contemporary film magazine.\r Cleopatra (Bara), the Siren of Egypt, by a clever ruse reaches Caesar (Leiber) and he falls victim to her charms. They plan to rule the world together, but then Caesar falls. Cleopatra's life is desired by the church, as the wanton woman's rule has become intolerable. Pharon (Roscoe), a high priest, is given a sacred dagger to take her life. He gives her his love instead and, when she is in need of some money, leads her to the tomb of his ancestors, where she tears the treasure from the breast of the mummy. With this wealth she goes to Rome to meet Antony (Hall). He leaves the affairs of state and travels to Alexandria with her, where they revel. Antony is recalled to Rome and married to Octavia (Blinn), but his soul cries out for Cleopatra. He sends her a message to arm her ships and meet him at Actium, where they battle the opposing forces. They are overpowered, and flee to Alexandria. There they are captured by Octavius (De Vries), and Antony dies in Cleopatra's arms. Before Cleopatra is to be dragged behind the wheels of Octavius' chariot, Pharon the priest, who has never ceased to love her, brings her the serpent that she joyously brings to her breast, dying royally with her crown on her head and scepter in her hand as becomes Egypt.\n",
            "\t9.960\tCaptain Applejack: Ambrose Applejohn lives in an extravagant old mansion with his ward, played by Poppy Faire, and his elderly aunt. Poppy is in love with Applejohn but he doesn't realize it and treats her like a child. Applejohn is bored with his sheltered and mundane live and craves excitement. He plans to sell the family mansion and use the money to travel around the world on a quest for adventure and excitement.\r Aunt Agatha is shocked when she finds out about her nephew's plans while Poppy supports him. Applejohn, however, soon finds unexpected adventure, danger, mystery and excitement right in his own house. On a dark and stormy night, a mysterious woman, Madame Anna Valeska, knocks on the door, seeking shelter from the storm and from a violent man, Ivan Borolsky, who is apparently pursuing her. As a matter of fact, the two are a pair of thieves seeking a treasure which is hidden in the Applejohn home. This treasure was hidden in the house by a pirate ancestor, known as Captain Applejack.\r Ivan Borolsky shows up at the house but, eventually, Applejohn manages to get Borolsky and Valeska out of the house. Applejohn falls asleep and dreams of his pirate ancestor, of his ship, and of his conquest of a pretty woman, who is at first resistant, but in the end completely surrenders to him. When he awakes he finds that a parchment really exists in the house and that his visitors are really thieves and are seeking a hidden treasure. He races to find the treasures indicated on the parchment before the thieves can find it themselves. In the end he put the villains to rout, finds the treasure and discovers that he also loves Poppy.\r The film is filled with pre-code material, especially during the pirate dream sequence. During that sequence, Captain Applejack brazenly forces a woman to submit to his sexual advances and actually grabs her breasts.[citation needed]\n",
            " Recognizing Gian Norcone as the group leader that killed the count, Norvin has him arrested after getting into a fight with him. Caesar Maruffi, a supposed friend and admirer who suits Margherita, is discovered to be Cardi. In the middle of a fight between Cardi and Norvin, Cardi is stabbed by Lucrezia, Margherita's maid. In the end, Norvin finally wins Margherita.[2][3]\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-3 Bi-Encoder Retrieval hits\n",
            " Cleopatra (Bara), the Siren of Egypt, by a clever ruse reaches Caesar (Leiber) and he falls victim to her charms. They plan to rule the world together, but then Caesar falls. Cleopatra's life is desired by the church, as the wanton woman's rule has become intolerable. Pharon (Roscoe), a high priest, is given a sacred dagger to take her life. He gives her his love instead and, when she is in need of some money, leads her to the tomb of his ancestors, where she tears the treasure from the breast of the mummy. With this wealth she goes to Rome to meet Antony (Hall). He leaves the affairs of state and travels to Alexandria with her, where they revel. Antony is recalled to Rome and married to Octavia (Blinn), but his soul cries out for Cleopatra. He sends her a message to arm her ships and meet him at Actium, where they battle the opposing forces. They are overpowered, and flee to Alexandria. There they are captured by Octavius (De Vries), and Antony dies in Cleopatra's arms. Before Cleopatra is to be dragged behind the wheels of Octavius' chariot, Pharon the priest, who has never ceased to love her, brings her the serpent that she joyously brings to her breast, dying royally with her crown on her head and scepter in her hand as becomes Egypt.\n",
            "\t0.315\tThe Man Who Lost Himself: As described in a film magazine,[4] American Victor Jones (Faversham) finds himself penniless and stranded in London. He meets the Earl of Rochester (Faversham), and the similarity between the two is so noticeable that even friends mistake Jones for the Earl. The Earl is estranged from his wife (Hopper) and family, owes great sums of money, and is considered in a bad light by acquaintances. He gets Jones drunk and sends him to the Rochester mansion, and then commits suicide. Until Jones receives a note written by the Earl prior to his death, he does not perceive his position. After reading the note, Jones immediately begins to pose as the Earl, but later reveals this scheme. However, he has fallen in love with the Earl's widow and they decide to reside in the United States.\n",
            "\t0.291\tThe Warrens of Virginia: As the American Civil War begins, Ned Burton leaves his Southern love, Agatha Warren, and joins the Union army. He is later protected and saved from death by Agatha in spite of her loyalty to the South.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-3 Cross-Encoder Re-ranker hits\n",
            " Cleopatra (Bara), the Siren of Egypt, by a clever ruse reaches Caesar (Leiber) and he falls victim to her charms. They plan to rule the world together, but then Caesar falls. Cleopatra's life is desired by the church, as the wanton woman's rule has become intolerable. Pharon (Roscoe), a high priest, is given a sacred dagger to take her life. He gives her his love instead and, when she is in need of some money, leads her to the tomb of his ancestors, where she tears the treasure from the breast of the mummy. With this wealth she goes to Rome to meet Antony (Hall). He leaves the affairs of state and travels to Alexandria with her, where they revel. Antony is recalled to Rome and married to Octavia (Blinn), but his soul cries out for Cleopatra. He sends her a message to arm her ships and meet him at Actium, where they battle the opposing forces. They are overpowered, and flee to Alexandria. There they are captured by Octavius (De Vries), and Antony dies in Cleopatra's arms. Before Cleopatra is to be dragged behind the wheels of Octavius' chariot, Pharon the priest, who has never ceased to love her, brings her the serpent that she joyously brings to her breast, dying royally with her crown on her head and scepter in her hand as becomes Egypt.\n",
            "\t-8.352\tIn the Land of the Head Hunters: The following plot synopsis was published in conjunction with a 1915 showing of the film at Carnegie Hall:\n",
            " However, while being unloaded from the ship it escapes and causes havoc until it reaches Tower Bridge, where its massive weight causes a collapse, and it swims down the River Thames. Challenger is morose as the creature leaves. Ed discovers that the love he left in London has married in his absence, allowing him and Paula to be together. Roxton morosely but gallantly hides his love for Paula as Paula and Ed leave together, while two passersby note: \"That's Sir John Roxton—sportsman.\"\n"
          ]
        }
      ],
      "source": [
        "search(query = \"Lost ﬁlm, Cleopatra charms Caesar, plots world rule, treasures from mummy, revels with Antony, tragic end with serpent in Alexandria.\")\n",
        "\n",
        "# Lexical Search\n",
        "# Recall @1: 1\n",
        "# MRR: 1\n",
        "\n",
        "# Bi-Encoder\n",
        "# Recall @1: 1\n",
        "# MRR: 1\n",
        "\n",
        "# Cross-Encoder\n",
        "# Recall @1: 1\n",
        "# MRR: 1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 123,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QIkvohZ8bxMu",
        "outputId": "383e1ac2-6697-4434-b0fe-47543666638d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input question: Denis Gage Deane-Tanner\n",
            "Top-3 lexical search (BM25) hits\n",
            "\t29.003\tCaptain Alvarez: A melodrama about an American who becomes a revolutionary leader battling evil government spies in Argentina. William Desmond Taylor portrays the title role, and Denis Gage Deane-Tanner, Taylor's younger brother, is thought to have played the small role of a blacksmith.\n",
            "\t4.123\tHangman's House: While stationed in Algiers Commandant Denis Hogan (Victor McLaglen) receives a letter containing bad news and requests that he be allowed to return to his home country of Ireland, where he is a wanted man. In Ireland, Baron James O'Brien (Hobart Bosworth) is told by his doctor that he has no more than a month to live. He decides to marry off his only daughter Connaught (June Collyer) to a socialite, John D'Arcy (Earle Foxe) despite her love of childhood friend Dermot McDermot (Larry Kent).\r Hogan returns to Ireland and disguises himself as a holy man. On his way to the O'Brien's house he is recognised by a gatekeeper, whom he reveal his intentions to kill a man to. Hogan meets Dermot McDermot and the three men witness the lights of Glenmalure's chapel being lit, signifying a wedding is taking place. At this time a group of soldiers ask the gate keeper if he has seen Hogan. Later that night, after Connaught and D'Arcy have been wed, the Baron dies. On the night of his funeral Hogan sneaks about the grounds of Hangman's House and is spotted by D'Arcy. D'Arcy is startled by the appearance of Hogan. At bedtime D'Arcy tries to sleep with Connaught but she rejects his advances.\r A community race is held on St. Stephen's Day and Connaught's horse The Bard is due to race. The horse's jockey goes missing just before the race because of interference from D'Arcy who has bet against the horse. Dermot is required to jockey the horse and he wins the race leading a drunken D'Arcy to shoot The Bard. D'Arcy is ostracised by the community because of this. Hogan is arrested at the race. At night Dermot and D'Arcy meet in a pub where D'Arcy reveals that he had an affair with Hogan's sister. Dermot gives D'Arcy money to leave Ireland and threatens him that if he ever sees him again he will kill him.\r Hogan escapes from prison and a gunfight erupts between his men and the guards. Later Dermot and Connaught visit Hogan's hideout and Hogan reveals that his sister died following D'Arcy's desertion. Connaught returns to Hangman's House to discover that D'Arcy has returned. After a struggle she flees to Dermot's house. Hogan and Dermot go to Hangman's House and confront D'Arcy. During a fight between the men a fire breaks out and burns down the house. Hogan and Dermot escape but D'Arcy falls to his death as a balcony collapses. Connaught and Dermot see Hogan off at the port as he returns to Algiers. Connaught gives Hogan a kiss and Dermot shakes his hands and thanks him. Connaught and Dermot walk away together as Hogan watches them.\n",
            "\t0.000\tRed Courage: As described in a film magazine,[4] Pinto Peters (Gibson) and his pal Chuckwalla Bill (Day) ride into town just as the editor of the local newspaper is being urged to leave by a gang of thugs led by Joe Reedly (Girard). The pair give the editor $100 and get a bill of sale for the newspaper, only to find out later that Reedly holds a mortgage of $200 against it. This they pay off and start a campaign to clean up the town. They meet with considerable opposition until they enlist the services of Judge Fay (Cummings). When Pinto runs for sheriff and defeats the tool of Reedly, everything is smooth sailing. The crooks are run out of town, money that was about to be stolen is restored to Jane (Malone), the ward of Reedly, and Pinto after several hard fights wins her hand.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-3 Bi-Encoder Retrieval hits\n",
            " Mayhem ensues. Margery Seaton (Loretta Young), one of the dinner guests, recognizes Barrymore as a former lover, and therefore assumes him to be an impostor. Sobering, Strathpeffer realizes he has come to the wrong party and asserts his right to his title; but Gwennie (Angella Mawby) hides her father's watch in Strathpeffer's pocket as he is renewing his romance with Margery. A police inspector arrives hunting for the missing lord, establishing his authenticity and the fact that he is not, after all, the hired guest.\n",
            "\t0.310\tBlind Youth: As described in a film magazine,[2] when Elizabeth (McDowell) and Pierre Monnier (Swickard) part, the mother takes one son, Henry (Kinny), while the father takes the other, Maurie (McGrail), to Paris. Maurie shows promise as a sculptor, but his life is ruined when he marries Clarice (Carew) and she deserts him to go with Jules Chandoce, a returning soldier. When his father dies, Maurie returns to New York, but finds his mother and brother ashamed of him. He walks the street for a time and contemplates suicide, but becomes inspired after meeting artist model Hope Martin (Joy). With her posing for him he makes a figure called \"Blind Youth\" which makes him famous overnight. After confessing his love to Hope, he tells her of his unfortunate marriage. Clarice reappears to share Maurie's recent fortune, but, after finally realizing that his happiness means more to her than money, she confesses to him that their marriage was illegal as Chandoce really was her husband. Maurie and Hope then wed.\n",
            " Phil writes his father about the inadequate salaries paid to the teachers, calling it a \"blot on the present day civilization\"; impressed, Philip West Sr. comes to see his altered son and agrees that something must be done. In the meantime, Phil dragoons his friends into paying the professor for extra tutoring in the evenings. During that night's session, both Peter and Gates see that Amelia has given her heart to Phil. In the final scene, the saddened reverend congratulates them and makes his way home.\n",
            "\n",
            "-------------------------\n",
            "\n",
            "Top-3 Cross-Encoder Re-ranker hits\n",
            "\t-6.756\tCaught Plastered: Tommy Tanner (Wheeler) and Egbert G. Higginbotham (Woolsey) are two vaudevillians who were kicked out of the last town they performed in. After fleeing to the town of Lockville, the duo befriend elderly widow Mother Talley (Lucy Beaumont). Mother is upset because she is unable to get customers into her drug store. In addition, Mother owes a payment on a bank note to Harry Watters (Jason Robards). Tommy and Egbert decide to turn Mother's drugstore into a money-making venture, even producing their own afternoon radio program right in the store. Harry, who wants to buy the store as part of a bootlegging operation, attempts to sell the duo an alcohol-laced drink, referring to it as \"lemon-syrup\". The \"syrup\" gains praise from everybody in town, until the police show up to close down the operation. Tommy and Egbert are suspicious of Harry, and it is up to them to find Harry, clear their name, and save Mother's store.\n",
            " When Berthine arrives at Russel’s apartment, she has been followed by an ex-lover, Nikolai Rabinoff (Ivan Lebedeff). In a jealous rage, Nikolai kills Berthine. The following morning Russell awakes to find June gone, having vowed to not come between the son and the father. He is also the main suspect in Berthine's murder. Seeking shelter from his father, Russell refuses to invoke June as his alibi. In order to save him, June steps forward and admits that Russell spent the night in her apartment. Sir Gerald, thinking the worst, renounces his devotion for June, which devastates her, but confirmed what she always feared: that he would never rely on her. June leaves his house, but when Sir Gerald discovers the innocence of Russell’s night spent in her apartment short after, he understands his own mistake and vows to track her down and spend the rest of his life with her.\n",
            " When Edith visits him in jail, Richard orders her to remain silent. During the trial, both he and Tori testify on the stand that he was the shooter. However, when he is found guilty, Edith rushes to the judge and announces she did it. When she shows the brand to all, the judge and officers of the court have great difficulty keeping the outraged spectators from attacking Tori. The judge sets aside the verdict, and Edith and Richard depart the courtroom.[3]\n"
          ]
        }
      ],
      "source": [
        "search(query = \"Denis Gage Deane-Tanner\")\n",
        "\n",
        "# Lexical Search\n",
        "# Recall @1: 1\n",
        "# MRR: 1\n",
        "\n",
        "# Bi-Encoder\n",
        "# Recall @1: 0\n",
        "# MRR: 0\n",
        "\n",
        "# Cross-Encoder\n",
        "# Recall @1: 0\n",
        "# MRR: 0"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.8"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "45423332eaf34499858f2c708cee23a8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_4a597af770844e11ab847a3fd08a6d7f",
              "IPY_MODEL_b19f3ea416bf4c5fb0920380426ad094",
              "IPY_MODEL_3ec1450a6f214f0096a472711e5eb85c"
            ],
            "layout": "IPY_MODEL_9234682560c14dedba0655a0993eee68"
          }
        },
        "4a597af770844e11ab847a3fd08a6d7f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_ff65fa86e1524640ab6de1cc03426eb5",
            "placeholder": "​",
            "style": "IPY_MODEL_4b11da7ea91b4a86b5f5dfcf95508d80",
            "value": "Downloading readme: 100%"
          }
        },
        "b19f3ea416bf4c5fb0920380426ad094": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_fecb7a244e064dda91b0a58fbca92077",
            "max": 1044,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_64e5ee72f9424956a30dcc382428f9fc",
            "value": 1044
          }
        },
        "3ec1450a6f214f0096a472711e5eb85c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_b7437adda7f04a89ac38b063e7bfefec",
            "placeholder": "​",
            "style": "IPY_MODEL_b67ca4033bf0430388b5a786367bbb66",
            "value": " 1.04k/1.04k [00:00&lt;00:00, 49.0kB/s]"
          }
        },
        "9234682560c14dedba0655a0993eee68": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ff65fa86e1524640ab6de1cc03426eb5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4b11da7ea91b4a86b5f5dfcf95508d80": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "fecb7a244e064dda91b0a58fbca92077": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "64e5ee72f9424956a30dcc382428f9fc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "b7437adda7f04a89ac38b063e7bfefec": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b67ca4033bf0430388b5a786367bbb66": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "6561af6601fc49e597521f449874b60f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_f4ab6b399a7242ac8b1ec3efe1be9094",
              "IPY_MODEL_788ce9981f3e414eb35ae983fd6bac6f",
              "IPY_MODEL_b89413bec7914666a7daea361ca91de7"
            ],
            "layout": "IPY_MODEL_20e2abaec3cd4d44aca6c39721a5c31a"
          }
        },
        "f4ab6b399a7242ac8b1ec3efe1be9094": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_52db9cda6f5d473e9d3d55c82d55136d",
            "placeholder": "​",
            "style": "IPY_MODEL_d5ee83c3a80e44c485ef15e8751bba30",
            "value": "Downloading data: 100%"
          }
        },
        "788ce9981f3e414eb35ae983fd6bac6f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_90164402de8447babcc21c19ac62b674",
            "max": 75031629,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_5890d9859c534bc1ba9caa7d82cfe794",
            "value": 75031629
          }
        },
        "b89413bec7914666a7daea361ca91de7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_29c4d017c10b4b62a630fa66db8d3bc4",
            "placeholder": "​",
            "style": "IPY_MODEL_dcdf7725183b4785b49a32d3cf42650e",
            "value": " 75.0M/75.0M [00:04&lt;00:00, 16.8MB/s]"
          }
        },
        "20e2abaec3cd4d44aca6c39721a5c31a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "52db9cda6f5d473e9d3d55c82d55136d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d5ee83c3a80e44c485ef15e8751bba30": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "90164402de8447babcc21c19ac62b674": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "5890d9859c534bc1ba9caa7d82cfe794": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "29c4d017c10b4b62a630fa66db8d3bc4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "dcdf7725183b4785b49a32d3cf42650e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "92352eb013c14ca98f145b3080fca1b4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_af727d1e22814d53815970cf17a9cfb2",
              "IPY_MODEL_a1913f640fde45cbb0677906337fefa2",
              "IPY_MODEL_c2c005acca5c41948872f6d8e0ed2c29"
            ],
            "layout": "IPY_MODEL_29503ea1d8644d65ad6c375cbba1fc08"
          }
        },
        "af727d1e22814d53815970cf17a9cfb2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_73191074624a447a9c5bf026de3731c0",
            "placeholder": "​",
            "style": "IPY_MODEL_c64b637b75f348b8b80b0580289c26c9",
            "value": "Generating train split: "
          }
        },
        "a1913f640fde45cbb0677906337fefa2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_daabef68853344a6add6406f3cfdee4c",
            "max": 1,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_e5759c0dea1240daa0bf441108ab1c7b",
            "value": 1
          }
        },
        "c2c005acca5c41948872f6d8e0ed2c29": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_7f13f5fe9ffc4521be647128c28fda98",
            "placeholder": "​",
            "style": "IPY_MODEL_e945d3c5d5184d17aeba59088b0360da",
            "value": " 30671/0 [00:01&lt;00:00, 23010.62 examples/s]"
          }
        },
        "29503ea1d8644d65ad6c375cbba1fc08": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "73191074624a447a9c5bf026de3731c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c64b637b75f348b8b80b0580289c26c9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "daabef68853344a6add6406f3cfdee4c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "20px"
          }
        },
        "e5759c0dea1240daa0bf441108ab1c7b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "7f13f5fe9ffc4521be647128c28fda98": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e945d3c5d5184d17aeba59088b0360da": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "49d47774ac394c88ab4ce6a47315e425": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_74698d8e54a94cfda40c7facf6478952",
              "IPY_MODEL_e362cf973683405e9989d9df1d1704d3",
              "IPY_MODEL_6cc760cf60e049779e95f946f0c672ec"
            ],
            "layout": "IPY_MODEL_862f29c8da1f42068be30f37c97914bf"
          }
        },
        "74698d8e54a94cfda40c7facf6478952": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_4de303fc79e245d4a60b6924b6739cf3",
            "placeholder": "​",
            "style": "IPY_MODEL_6bdca55151fd4da28ca39b25d714b94e",
            "value": "Batches: 100%"
          }
        },
        "e362cf973683405e9989d9df1d1704d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_00f545b964944ddbbb9bc82f2c6b0dc2",
            "max": 32,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_2470f171b98148f18610c36171b6bd91",
            "value": 32
          }
        },
        "6cc760cf60e049779e95f946f0c672ec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_a2397a53e8754da29663e127a81672dc",
            "placeholder": "​",
            "style": "IPY_MODEL_2047a6da0d4b46698d425cfe7c6c2998",
            "value": " 32/32 [06:04&lt;00:00,  2.98s/it]"
          }
        },
        "862f29c8da1f42068be30f37c97914bf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4de303fc79e245d4a60b6924b6739cf3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6bdca55151fd4da28ca39b25d714b94e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "00f545b964944ddbbb9bc82f2c6b0dc2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2470f171b98148f18610c36171b6bd91": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "a2397a53e8754da29663e127a81672dc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2047a6da0d4b46698d425cfe7c6c2998": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "b3508969cd7f443d84591972aa7e15dd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_a76086fcd1344d2b8456c7257c448573",
              "IPY_MODEL_1bd5cac03ea0458b87ae7b160e4da3db",
              "IPY_MODEL_eb70f0ea233a415b99b2e97915233c16"
            ],
            "layout": "IPY_MODEL_b8fe47f2cb924078be75bbd3f1bb70df"
          }
        },
        "a76086fcd1344d2b8456c7257c448573": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_8c335a1d5acd460f8e218430912d75e5",
            "placeholder": "​",
            "style": "IPY_MODEL_53a5c55591c94d22a8ec0ebb54aa7061",
            "value": "100%"
          }
        },
        "1bd5cac03ea0458b87ae7b160e4da3db": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_ee291c58681f44faa227ab0462429b5a",
            "max": 1000,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_8255af9d3212427c897e4c73efde4f0c",
            "value": 1000
          }
        },
        "eb70f0ea233a415b99b2e97915233c16": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_0ed2c06c35674532b8e271351560b985",
            "placeholder": "​",
            "style": "IPY_MODEL_627208c9a8e64119a0f4eca3bd220438",
            "value": " 1000/1000 [00:00&lt;00:00, 2857.29it/s]"
          }
        },
        "b8fe47f2cb924078be75bbd3f1bb70df": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8c335a1d5acd460f8e218430912d75e5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "53a5c55591c94d22a8ec0ebb54aa7061": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "ee291c58681f44faa227ab0462429b5a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8255af9d3212427c897e4c73efde4f0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "0ed2c06c35674532b8e271351560b985": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "627208c9a8e64119a0f4eca3bd220438": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
